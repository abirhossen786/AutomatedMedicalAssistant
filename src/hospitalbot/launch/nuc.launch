<launch>
    <arg name="headless" default="true"/>
    <param name="robot_description" command="$(find xacro)/xacro '$(find hospitalbot)/urdf/hospitalbot.urdf.xacro'"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <node pkg="hospitalbot" type="odometry_publisher" name="odometry_publisher" output="screen"/>
    <node pkg="hospitalbot" type="proximity_publisher" name="proximity_publisher" output="screen"/>
    <node pkg="hospitalbot" type="key_publisher.py" name="keyboard_driver" output="screen"/>
    <node pkg="hospitalbot" type="command_twist_publisher" name="command_twist_publisher" output="screen">
        <param name="linear_velocity" value="0.25"/>
        <param name="angular_velocity" value="1.0"/>
    </node>
    <node pkg="rosserial_python" type="serial_node.py" name="serial_odometry_node" output="screen">
        <param name="port" value="/dev/odometry_arduino"/>
        <param name="baud" value="115200"/>
    </node>
    <node pkg="rosserial_python" type="serial_node.py" name="serial_imu_node" output="screen">
        <param name="port" value="/dev/imu_arduino"/>
        <param name="baud" value="115200"/>
    </node>
    <node pkg="rosserial_python" type="serial_node.py" name="serial_proximity_node" output="screen">
        <param name="port" value="/dev/proximity_arduino"/>
        <param name="baud" value="115200"/>
    </node>
    <node pkg="rosserial_python" type="serial_node.py" name="serial_battery_node" output="screen">
        <param name="port" value="/dev/battery_arduino"/>
        <param name="baud" value="115200"/>
    </node>
    <node pkg="hospitalbot" type="goal_command_publisher.py" name="goal_command_publisher" output="screen">
        <param name="arduino_port" value="/dev/gsm_arduino"/>
    </node>
    <node pkg="rosserial_python" type="serial_node.py" name="serial_rfid_node" output="screen">
        <param name="port" value="/dev/rfid_arduino"/>
        <param name="baud" value="115200"/>
    </node>
    <node pkg="rosserial_python" type="serial_node.py" name="serial_compartment_node" output="screen">
        <param name="port" value="/dev/compartment_arduino"/>
        <param name="baud" value="115200"/>
    </node>
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>  
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
        <remap from="scan" to="laser_scan"/>
    </node>
    <node name="map_server" pkg="map_server" type="map_server" args="$(find	hospitalbot)/map/map.yaml"/>
    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
        <remap from="scan" to="laser_scan"/>
        <remap from="imu/data" to="imu"/>
        <param name="fixed_frame" value = "odom"/>
        <param name="base_frame" value="base_footprint"/>
        <!-- <param name="use_alpha_beta" value="true"/> -->
        <param name="use_odom" value="false"/>
        <param name="use_imu" value="true"/>
        <param name="max_iterations" value="10"/>
        <param name="publish_pose" value="true"/>
        <param name="publish_tf" value="true"/>
        <param name="use_vel" value="false"/>
    </node>
    
    <include file="$(find hospitalbot)/launch/amcl_diff.launch">
        <arg name="scan_topic" value="laser_scan"/>
        <arg name="use_map_topic" value="true"/>
        <arg name="base_frame_id" value="base_footprint"/>
    </include>
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find hospitalbot)/param/costmap_common_params.yaml" command="load" ns="global_costmap"	/>
        <rosparam file="$(find hospitalbot)/param/costmap_common_params.yaml" command="load" ns="local_costmap"	/>
        <rosparam file="$(find hospitalbot)/param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find hospitalbot)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find hospitalbot)/param/base_local_planner_params.yaml" command="load" />
        <rosparam file="$(find hospitalbot)/param/global_planner_params.yaml" command="load" />
        <rosparam file="$(find hospitalbot)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find hospitalbot)/param/navfn_global_planner_params.yaml" command="load" />
	</node>
    <node pkg="hospitalbot" type="state_machine" name="state_machine" output="screen">
        <param name="initial_calibration" type="bool" value="false"/>
    </node>
    <node pkg="rviz" type="rviz" name="rviz" if="$(eval not headless)" args="-d $(find hospitalbot)/config/navigation.rviz"/>
</launch>
